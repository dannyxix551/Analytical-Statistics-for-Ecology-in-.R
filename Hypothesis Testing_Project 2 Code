---
title: "Week 2 Problem Set"
author: "Daniel Crownover"
date: "2022-12-06"
output: 
  html_document:
    code_folding: hide
---


```{r chunk_name1, echo=FALSE, warning=FALSE, fig.show='only', include=FALSE}

## read in packages
library(dplyr)
library(readxl)
library(coin)
library(lawstat)
library(ggpubr)
library(rstatix)
library(ggplot2) #a data visualiztion package
library(ggthemes) #a package of themes for visualizations. themes are settings to make are visualizations consistent and attractive
library(RColorBrewer) # I like color, RColorBrewer is a package of colors and color combinations.
library(moments) #allows us to calculate skewness and kurtosis
library(kableExtra) #this is for making data tables in R
```


##### Questions:
- (1) Methane levels near fracking sites vs. Methane levels - far from fracking sites for ALL observations
- (2) Methane levels near fracking sites vs. Methane levels far from fracking sites for valley observations--- only filter
- (3) Methane levels near fracking sites vs. Methane levels far from fracking sites for upland observations-- only filter
- (4) Methane levels in the valley vs. Methane levels in the upland

#### Introduction:
In this Problem Set, we delve into the analysis of water quality data extracted from a study conducted by Molofsky et al. (2013), focusing on methane levels in 1,701 drinking wells situated in Susquehanna County, Pennsylvania. The study aims to investigate whether methane levels in drinking water wells exhibit variations based on their proximity to fracking sites. Fracking, a prevalent method for extracting natural gas, has raised concerns regarding its potential impact on groundwater quality.
The dataset segregates the drinking wells into two primary categories: those within a 1 km radius of a fracking site and those situated farther away. Additionally, the wells are further classified based on their geographical location, distinguishing between those in valley regions and those in upland areas. The study by Molofsky et al. (2013) serves as the foundation for our examination of water quality dynamics in the context of fracking activities.
In this problem set, our objective is to employ R programming to conduct comparison of means tests, encompassing both parametric and non-parametric analyses. By leveraging statistical techniques, we endeavor to elucidate potential disparities in methane levels between wells near fracking sites and those distant from such operations. Through meticulous analysis and interpretation of the data, we aim to contribute insights into the broader discourse surrounding fracking and its ramifications on water quality.
Prior to embarking on the problem set, it is imperative to familiarize oneself with the seminal work of Molofsky et al. (2013) to contextualize the dataset and its implications effectively. The ensuing discussion and analyses will be presented in a structured manner, utilizing tables to encapsulate our findings succinctly. In addition to the narrative report, the submission necessitates the provision of an .rmd file containing the executed R code, facilitating transparency and reproducibility in our analytical endeavors.

#### Data Description:
The box plots in Figures 2.1.1 and 2.1.2 revealed numerous outliers in methane levels near and far from fracking sites, observed in both upland and valley locations. Shapiro-Wilks Test results (Figure 2.1.3) demonstrated strong evidence against normal distribution for both near (p = 7.093e-35) and far (p = 1.11e-59) proximities, a conclusion supported by visual inspection using ggplot (Figure 2.1.3). The mean methane levels for far wells were 684.25 μg/L (shown in 2.2.4 and 2.2.5), with a median methane level in both locations at far samples of 0.6μg/L. The standard deviation of far wells was 3132.928 μg/L, with an interquartile range (IQR) of 15.83 μg/L for far wells in both upland and valley locations. Similarly, the mean methane levels for near wells were 1225.604.111μg/L (shown in 2.2.4 and 2.2.5), with a median methane level for near wells in both locations was 5.9μg/L. The standard deviation of near wells was 4086.95 μg/L, with an IQR of 25.575μg/L for near wells in the valley and upland. Levine's test shown in 2.1.6 (p =.59) suggested equal variances across far and near groups in the valley, while the parametric t-test shown in 2.1.7 (p = 0.65) failed to find a significant difference in mean methane levels. Cohen's d test (effect size = -0.03041743) indicated minimal differences between near and far proximity means. 
  
The box plots in Figures 2.2.1 and 2.2.2 revealed numerous outliers in methane levels near and far from fracking sites, observed in Valley locations. Shapiro-Wilks Test results (Figure 2.2.3) demonstrated strong evidence against normal distribution for both near (p = 2.148e-27) and far (p = 7.97e-44) proximities, a conclusion supported by visual inspection using ggplot (Figure 2.2.3). The mean methane levels for far wells were 1186.406 μg/L (shown in 2.2.4 and 2.2.5), with a median methane level in the valley at far samples of 1.3μg/L. The standard deviation of far wells was 4058.772 μg/L, with an interquartile range (IQR) of 25.8 μg/L for far wells in the valley. Similarly, the mean methane levels for near wells were 1225.604.111μg/L (shown in 2.2.4 and 2.2.5), with a median methane level for near wells in the valley at 19.0μg/L. The standard deviation of near wells was 5172.061 μg/L, with an IQR of 25.48μg/L for near wells in the valley. Levine's test shown in figure 2.2.6 (p =.9155) suggested equal variances across far and near groups in the valley, while the parametric t-test shown in figure 2.2.7 (p = 0.922) failed to find a significant difference in mean methane levels. Cohen's d test shown in figure 2.2.8 (effect size = -0.008431705) indicated minimal differences between near and far proximity means. 
  
The box plots in Figures 2.3.1 and 2.3.2 revealed numerous outliers in methane levels near and far from fracking sites, observed in Upland locations. Shapiro-Wilks Test results (Figure 2.3.3) demonstrated strong evidence against normal distribution for both near (p =7.46e-24 )and far (p = 2.28e-49) proximities, a conclusion supported by visual inspection using ggplot (Figure 2.3.3). The mean methane levels for far wells were 209.731 μg/L (shown in 2.3.4 and 2.3.5), with a median methane level in the upland at far samples of 1.3μg/L. The standard deviation of far wells was 1753.102 μg/L, with an interquartile range (IQR) of 2.25 μg/L for far wells in the upland. Similarly, the mean methane levels for near wells were 133.880.111μg/L (shown in 2.3.4 and 2.3.5), with a median methane level for near wells in the upland at 1.4μg/L. The standard deviation of near wells was 799.431 μg/L, with an IQR of 25.69μg/L for near wells in the upland. Levine's test (shown in figure 2.3.4) (p =.63) suggested equal variances across far and near groups in the upland, while the parametric t-test shown in figure 2.3.7 (p = 0.434) failed to find a significant difference in mean methane levels. Cohen's d shown in figure 2.3.8 test (effect size = 0.0055672) indicated minimal differences between near and far proximity means.
  
The box plots in Figures 2.4.1 and 2.4.2 revealed numerous outliers in methane levels in Upland and Valley sample locations. Shapiro-Wilks Test results (Figure 2.4.3) demonstrated strong evidence against normal distribution for both upland (p = 1.953928e-52 )and valley (p = 8.197769e-4) locations, a conclusion supported by visual inspection using ggplot (Figure 2.4.3). The mean methane levels for upland location was 198.208 μg/L (shown in 2.4.4 and 2.4.5), with a median methane at upland location of 0.47μg/L. The standard deviation of upland locations was 1644.111 μg/L, with an interquartile range (IQR) of 3.565 μg/L for far wells in the upland. Similarly, the mean methane levels for the valley location was 1195.243 μg/L (shown in 2.4.4 and 2.4.5), with a median methane level for Valley at 1.8μg/L. The standard deviation of upland location was 4331.548 μg/L, with an IQR of 25.780μg/L for the location of the upland. Levine's test (shown in figure 2.4.6) (p =.63 for upland) and (0.91 upland for valley) suggested equal variances across groups in the upland, while the parametric t-test shown in figure 2.3.7 (p = 0.43 UPLAND) AND P = 0.92 VALLEY. this failed to find a significant difference in mean methane levels. Cohen's d shown in figure 2.4.8 test (effect size = 0.0055672 upland) and indicated minimal differences between upland and valley location means.
  
The Wilcox test for question (1) provided a p-value of 1.64e-10 as shown in Figure 3.1.1. The effect size for this test was 0.159 as shown in figure 3.1.2. The Wilcox test for question (2) provided a p-value of .00145 as shown in Figure 3.2.1. The effect size for this test was 0.108 as shown in figure 3.2.2.The Wilcox test for question (3) provided a p-value of 1.05e-06 as shown in Figure 3.3.1. The effect size for this test was 0.168 as shown in figure 3.3.2. The wilcox test for question (4) provided a p-value of 1.05e-06 as shown in Figure 3.4.1. The effect size for this test was .16  as shown in figure 3.4.2. 
  
For question (1)the log transformations revealed a levine test(Figure 4.1.3) p value of (p = 0.83) representing equal variance in mean values across Near and Far proximities across all sites/loactions as shown in figure 4.1.3. The Shapiro test indicated a (p = 1.187122e-35) for far observations across all sites and (p= 9.47e-14) for near proximities across the 4 sites. These va;ues demonstrated strong evidence against normal distribution for both far a near proximities across all sites, a conclusion supported by visual inspection using histogram (Figure 4.1.2)
 
For question (2) the log transformations revealed a levine test (Figure 4.2.3)p value of (p = 0.0028) representing varied variance in mean values across Near and Far proximities across the valley location as shown in figure 4.2.3. The Shapiro test( figure 4.2.4) indicated a ( p = 1.547412e-23) for far observations across the valley and ( p = 1.54149) for near proximities across the valley. This demonstrated strong evidence against normal distribution for both far a near proximities across all sites, a conclusion supported by visual inspection using histogram (Figure 4.2.2)

For question (3)The log transformations revealed a leivine test (figure 4.3.3)p value of (p=.005582372) representing varied variance in mean values across Near and Far proximities across the upland location as shown in figure 4.2.3. The Shapiro test(figure 4.3.4) indicated a (p = 2.381698e-27) for far observations across the upland and (1.061215e-06) for near proximities across upland. This demonstrated strong evidence against normal distribution for both far a near proximities across all sites, a conclusion supported by visual inspection using histogram (Figure 4.3.2)

For question (4)The log transformations revealed a leivine test (figure 4.4.3)p value of (p=.0.00558
) representing varied(not equal) variance in mean values across upland and valley locations as shown in figure 4.4.3. The Shapiro test(figure 4.4.4) indicated a (p = 6.92e-28) for upland observations and (p = 1.08e-24) for valley locations across upland. This demonstrated strong evidence against normal distribution for both upland a valley locations for both far and near proximities, a conclusion supported by visual inspection using histogram (Figure 4.4.2).

#### Discussion and Statistical Analysis:
  Our preliminary parametric tests indicated a failure to meet the assumptions necessary for conducting a t-test. Despite this, when we proceeded with the t-test, contrary to the preliminary results, we obtained parametric t-test p-values below the critical value of 0.05 for all four questions posed. Consequently, we did not find a statistically significant difference between the mean levels of methane for the far and near groups or between the valley and upland regions.
In response to the ineffectiveness of the parametric t-test, we pursued non-parametric testing and log transformations for further analysis and hypothesis testing. The Wilcoxon test, conducted for all four questions in the non-parametric hypothesis testing, suggested that the observed data were highly improbable under the null hypothesis, indicating that the data still exhibited an abnormal kurtosis distribution.
Furthermore, log-transformed data across all four sites yielded very small p-values for the Shapiro test. Consequently, we concluded that we do not possess sufficient evidence to assert a significant difference between the mean methane levels among the far and near groups or between the valley and upland regions. Even post-normalization, the data remained highly skewed and demonstrated an abnormal distribution.

#### Conclusion:
Based on our analysis, we conclude that the methods used in our study, including parametric and non-parametric tests, were unable to provide and lack sufficient and conclusive evidence regarding variations in mean methane levels among drinking wells near fracking sites compared to those distant from such operations or based on relative location. Despite attempts to address data distribution challenges through parametric and non-parametric and logarithmic approaches, including log transformations, the results remained inconclusive due to persistent abnormal distributions and skewness.
Our preliminary parametric tests failed to meet underlying assumptions. Subsequent non-parametric analyses and transformations did not yield evidence to support statistically significant differences in methane levels between the near and far groups, or between valley and upland regions.
The findings of our study echo the concerns raised by Molofsky et al. (2013) regarding the potential impacts of fracking on groundwater quality. However, our inability to discern clear patterns underscores the complexity of assessing methane levels in the context of fracking activities.






































































##### Key:
- Number inside parentheses (#) corresponds to one of the comparison groups (1, 2, 3, or 4).


#### Appendix:
- Figure 1.1: Download the Water Quality Data
- 2.0.0: Parametric t-test and Preliminary Test
- 2.1.0 (1)
- Figure 2.1.1: Create a Box Plot (1)
- Figure 2.1.2: 2.1 Identify Outliers by Groups (1)
- Figure 2.1.3: 2.1 Check Normality by Groups (1) 
- Figure 2.1.4: 2.1 Summary Statistics ~ Mean and Interquartile Range ~ (1)
- Figure 2.1.5: 2.1 Summary Statistics ~ Mean Methane and Median Methane ~ (1)
- Figure 2.1.6: 2.1 Levine Test (1)
- Figure 2.1.7: 2.1 Parametric t-test (1)
- Figure 2.1.8: 2.1 Cohens D test (1)
- Figure 2.1.9: 2.1 Report Results (1)
- 2.2.0 (2)
- Figure 2.2.1: 2.2 Create a Box Plot (2)
- Figure 2.2.2: 2.2 Identify Outliers by Groups (2)
- Figure 2.2.3: 2.2 Check Normality by Groups (2) 
- Figure 2.2.4: 2.2 Summary Statistics ~ Mean and Interquartile Range ~ (2)
- Figure 2.2.5: 2.2 Summary Statistics ~ Mean Methane and Median Methane ~ (2)
- Figure 2.2.6: 2.2 Levine Test (2)
- Figure 2.2.7: 2.2 Parametric t-test (2)
- Figure 2.2.8: 2.2 Cohens D test (2)
- Figure 2.2.9: 2.2 Report Results (2)
- 2.3.0 (3)
- Figure 2.3.1: 2.3 Create a Box Plot (3)
- Figure 2.3.2: 2.3 Identify Outliers by Groups (3)
- Figure 2.3.3: 2.3 Check Normality by Groups (3) 
- Figure 2.3.4: 2.3 Levine test (3)
- Figure 2.3.5: 2.3 Summary Statistics ~ Mean and Interquartile Range ~ (3)
- Figure 2.3.6: 2.3 Summary Statistics ~ Mean Methane and Median Methane ~ (3)
- Figure 2.3.7: 2.3 Parametric t-test (3)
- Figure 2.3.8: 2.3 Cohens D test (3)
- Figure 2.3.9: 2.3 Report Results (3)
- 2.4.0
- Figure 2.4.1: 2.4 Create a Box Plot (4)
- Figure 2.4.2: 2.4 Identify Outliers by Groups (4)
- Figure 2.4.3: 2.4 Check Normality by Groups (4) 
- Figure 2.4.4: 2.4 Summary Statistics ~ Mean and Interquartile Range ~ (4)
- Figure 2.4.5: 2.4 Summary Statistics ~ Mean Methane and Median Methane ~ (4)
- Figure 2.4.6: 2.4 Levine test (4)
- Figure 2.4.7: 2.4 Parametric t-test (4)
- Figure 2.4.8: 2.4 Cohens D test (4)
- Figure 2.4.9: 2.4 Report Results (4)
- 3.0.0: Non-Parametric t-test and Preliminary test
- 3.1.0
- Figure 3.1.1: 3.1 Compute the Wilcox test (1)
- Figure 3.1.2: 3.1 Calculate Effect Size (1)
- Figure 3.2.1: 3.2 Compute the Wilcox test (2)
- Figure 3.2.2: 3.2 Calculate Effect Size (2)
- Figure 3.3.1: 3.3 Compute the Wilcox test (3)
- Figure 3.3.2: 3.3 Calculate Effect Size (3)
- Figure 3.4.1: 3.4 Compute the Wilcox test (4)
- Figure 3.4.2: 3.4 Calculate Effect Size (4)
- 4.0.0: Log Transformations and t-test
- Figure 4.1.1: 4.1 Log Transforming Data (1) 
- Figure 4.1.2: 4.1 Histogram of Logged Data (1)
- Figure 4.1.3: 4.1 Levine test (1)
- Figure 4.1.4: 4.1 Shapiro and Normality Test on Log Value (1)
- Figure 4.2.1: 4.2 Log Transforming Data (2) 
- Figure 4.2.2: 4.2 Histogram of Logged Data (2)
- Figure 4.2.3: 4.2 Levine test (2)
- Figure 4.2.4: 4.2 Shapiro and Normality Test on Log Value (2)
- Figure 4.3.1: 4.3 Log Transforming Data (3) 
- Figure 4.3.2: 4.3 Histogram of Logged Data (3)
- Figure 4.3.3: 4.3 Levine test (3)
- Figure 4.3.4: 4.3 Shapiro and Normality Test on Log Value (3)
- Figure 4.4.1: 4.4 Log Transforming Data (4) 
- Figure 4.4.2: 4.4 Histogram of Logged Data (4)
- Figure 4.4.3: 4.4 Levine test (4)
- Figure 4.4.4: 4.4 Shapiro and Normality Test on Log Value (4)




------



###### Figure 1.1: Download the Water Quality Data
```{r chunk_name2, echo=FALSE, warning=FALSE, fig.show='only'}
 PAFracking <- read.csv("/Users/daniel/Downloads/BIO 591 Coding Files/Problem Set/problem set 2/psdata2/PAFracking.csv")


## displaying the first head?
head(PAFracking) 

##str displays string of data
##str(PAFracking)

```
###### 2.0.0: Parametric t-test and Preliminary Test

---------------- 

###### 2.1.0 (1)



##### Figure 2.1.1: 2.1 Create a Box Plot (1)
```{r chunk_name3, echo=FALSE, warning=FALSE, fig.show='only'}

## creating a box plot

library(ggpubr)
bxp1 <- ggboxplot(
  PAFracking, x = "proximity", y = "methane", width = 0.5, add = c("mean", "jitter"), 
  ylab = "methane (g)", xlab = "Proximity"
  )
bxp1

```

###### Figure 2.1.2: 2.1 Identify Outliers by Groups (1)
``` {r chunk_name4, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking %>%
  group_by(proximity) %>%
  identify_outliers(methane)  %>%
  kbl() %>%
  kable_styling()
```
###### Figure 2.1.3: 2.1 Check Normality by Groups (1) 
```{r chunk_name5, echo=FALSE, warning=FALSE, fig.show='only'}
## pick 123 of what --> bsb_df2 variables -->grouping ---> shapiro test
set.seed(123)
PAFracking %>%
  group_by(proximity) %>%
  shapiro_test(methane)  %>%
  kbl() %>%
  kable_styling()


# Draw a qq plot by group
## this is showing that it is not normilly distributed
ggqqplot(PAFracking, x = "methane", facet.by = "proximity") 


```
###### Figure 2.1.4: 2.1 Summary Statistics ~ Mean and Interquartile Range ~ (1)
```{r chunk_name6, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking %>% group_by(proximity) %>% get_summary_stats(methane, type = c("mean_sd"))  %>%
  kbl() %>%
  kable_styling()
PAFracking %>% group_by(proximity) %>%  get_summary_stats(methane, type = "median_iqr")  %>%
  kbl() %>%
  kable_styling()


```
###### Figure 2.1.5: 2.1 Summary Statistics ~ Mean Methane and Median Methane ~ (1)
```{r chunk_name7, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking %>% 
  group_by(proximity) %>% 
  summarize(`Mean Methane` = round(mean(methane), 2), 
            `Median Methane` = round(median(methane), 2)) %>% 
  ungroup %>% 
rename("Proximity of All" = proximity) %>%  # Rename the column
  kbl() %>% 
  kable_styling()
```
###### Figure 2.1.6: 2.1 Levine Test (1)
```{r chunk_name8, echo=FALSE, warning=FALSE, fig.show='only'}
library(rstatix)

PAFracking %>% levene_test(methane ~ proximity)  %>%
  kbl() %>%
  kable_styling()

```
###### Figure 2.1.7: 2.1 Parametric t-test(1)
```{r chunk_name9, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking <- na.omit(PAFracking)

stat.test1 <- PAFracking  %>% 
  t_test(methane ~ proximity, detailed = T) %>%
  add_significance()

stat.test1


```
###### Figure 2.1.8: 2.1 Cohens D test (1)
```{r chunk_name10, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking %>%  cohens_d(methane ~ proximity, var.equal = FALSE)  %>%
  kbl() %>%
  kable_styling()
```
###### Figure 2.1.9: 2.1 Report Results (1)
```{r chunk_name11, echo=FALSE, warning=FALSE, fig.show='only'}
library(ggplot2)

stat.test1 <- stat.test1 %>% add_xy_position(x = "group") 
bxp1 + 
  stat_pvalue_manual(stat.test1, tip.length = 0) +
  labs(subtitle = get_test_label(stat.test1, detailed = TRUE))
```

-----------------------------------------------

### 2.2.0 (2)

------------------------------------------------

###### Figure 2.2.1: 2.2 Create a Box Plot (2)
```{r chunk_name12, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_valley <- PAFracking %>% filter(location == "Valley") 

## creating a box plot

bxp2 <- ggboxplot(
  PAFracking_valley, x = "proximity", y = "methane", add = "jitter", 
  ylab = "methane (g)", xlab = "Proximity"
  )
bxp2

```

###### Figure 2.2.2: 2.2 Identify Outliers by Groups (2)
``` {r chunk_name13, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_valley <- PAFracking %>% filter(location == "Valley")  %>% 
  

  group_by(proximity) %>%
  identify_outliers(methane)  %>%
  kbl() %>%
  kable_styling()


PAFracking_valley
```
###### Figure 2.2.3: 2.2 Check Normality by Groups (2) 
```{r chunk_name14, echo=FALSE, warning=FALSE, fig.show='only'}

PAFracking_valley <- PAFracking %>% filter(location == "Valley")  

## pick 123 of what --> PAFracking_valley variables -->grouping ---> shapiro test
set.seed(123)
PAFracking_valley %>%
  group_by(proximity) %>%
  shapiro_test(methane)  %>%
  kbl() %>%
  kable_styling()

## the null of the shapiro test is a normal dist, we obtained low pvalue and we are rejecting the null

# Draw a qq plot by group
## this is showing that it is not normilly distributed
ggqqplot(PAFracking_valley, x = "methane", facet.by = "proximity") 


```
###### Figure 2.2.4: 2.2 Summary Statistics ~ Mean and Interquartile Range ~ (2)
```{r chunk_name15, echo=FALSE, warning=FALSE, fig.show='only'}
library(tidyverse)
PAFracking_valley <- PAFracking %>% filter(location == "Valley")  

PAFracking_valley %>% group_by(proximity) %>% 
get_summary_stats(methane, type = c("mean_sd"))  %>%
  kbl() %>%
  kable_styling()
PAFracking_valley %>% group_by(proximity) %>% 
get_summary_stats(methane, type = "median_iqr")  %>%
  kbl() %>%
  kable_styling()


```
###### Figure 2.2.5:  2.2 Summary Statistics ~ Mean Methane and Median Methane ~ (2)
```{r chunk_name16, echo=FALSE, warning=FALSE, fig.show='only', results='asis'}
PAFracking_valley <- PAFracking %>% filter(location == "Valley")  

PAFracking_valley %>% 
  group_by(proximity) %>% 
  summarize(`Mean Methane` = round(mean(methane), 2), 
            `Median Methane` = round(median(methane), 2)) %>% 
  ungroup %>% 
rename("Proximity in the Valley" = proximity) %>%  # Rename the column
  kbl() %>% 
  kable_styling()



## PAFracking %>%: This takes the PAFracking dataset and pipes it (%>%) into the next operation
## filter(location == "Valley") %>%: This filters the dataset to include only rows where the value of the location variable is equal to "Valley".
## group_by(proximity) %>%: This groups the filtered dataset by the proximity variable, which indicates the proximity to fracking sites.
## summarize(Mean Methane= round(mean(methane), 2),Median Methane = round(median(methane), 2)) %>%: Within each group (determined by proximity to fracking 
## the round() function rounds the values to two decimal places  
## summarize(Mean Methane= round(mean(methane), 2),Median Methane = round(median(methane), 2)) %>%: Within each group (determined by proximity to fracking 
## the round() function rounds the values to two decimal places  
  ## "ungroup %>%:" This removes the grouping structure, ensuring that subsequent operations are applied to the dataset as a whole.
  ## ungroup %>%: This removes the grouping structure, ensuring that subsequent operations are applied to the dataset as a whole.
## 'kable_styling() function from the kableExtra package, making it visually more appealing.
 

```
###### Figure 2.2.6: 2.2 Levine Test (2)
```{r chunk_name18, echo=FALSE, warning=FALSE, fig.show='only'}
library(rstatix)
PAFracking_valley <- PAFracking %>% filter(location == "Valley")  

PAFracking_valley %>% levene_test(methane ~ proximity)  %>%
  kbl() %>%
  kable_styling()

```
###### Figure 2.2.7: 2.2 Parametric t-test (2)
```{r chunk_name19, echo=FALSE, warning=FALSE, fig.show='only'}

PAFracking_valley <- PAFracking %>% filter(location == "Valley")  

stat.test2 <- PAFracking_valley  %>% 
  t_test(methane ~ proximity, detailed = T) %>%
  add_significance()  

stat.test2

```
###### Figure 2.2.8:  2.2 Cohens D test (2)
```{r chunk_name20, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_valley <- PAFracking %>% filter(location == "Valley")  

PAFracking_valley %>%  cohens_d(methane ~ proximity, var.equal = FALSE)  %>%
  kbl() %>%
  kable_styling()
```
###### Figure 2.2.9: 2.2 Report Results (2)
```{r chunk_name21, echo=FALSE, warning=FALSE, fig.show='only'}
library(ggplot2)
stat.test2 <- stat.test2 %>% add_xy_position(x = "group")
bxp2 + 
  stat_pvalue_manual(stat.test2, tip.length = 0) +
  labs(subtitle = get_test_label(stat.test2, detailed = TRUE))

```
--------------



## 2.3.0 (3)


--------------

###### Figure 2.3.1: 2.3 Create a Box Plot (3)
```{r chunk_name22, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_upland <- PAFracking %>% filter(location == "Upland")

## creating a box plot

bxp3 <- ggboxplot(
  PAFracking_upland, x = "proximity", y = "methane", add = "jitter", 
  ylab = "methane (g)", xlab = "Proximity"
  )

bxp3

```
###### Figure 2.3.2: 2.3 Identify Outliers by Groups (3)
``` {r chunk_name23, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_upland <- PAFracking %>% filter(location == "Upland")  %>% 
  

  group_by(proximity) %>%
  identify_outliers(methane)  %>%
  kbl() %>%
  kable_styling()


PAFracking_upland
```
###### Figure 2.3.3 2.3 Check Normality by Groups (3) 
```{r chunk_name25, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_upland <- PAFracking %>% filter(location == "Upland")

set.seed(123)
PAFracking_upland %>%
  group_by(proximity) %>%
  shapiro_test(methane)  %>%
  kbl() %>%
  kable_styling()

## the null of the shapiro test is a normal dist, we obtained low pvalue and we are rejecting the null

# Draw a qq plot by group
## this is showing that it is not normilly distributed
ggqqplot(PAFracking_upland, x = "methane", facet.by = "proximity") 


```
###### Figure 2.3.4: 2.3 Levine test (3)
```{r chunk_name24, echo=FALSE, warning=FALSE, fig.show='only'}
library(rstatix)
PAFracking_upland <- PAFracking %>% filter(location == "Upland")

PAFracking_upland %>% levene_test(methane ~ proximity)  %>%
  kbl() %>%
  kable_styling()

```
###### Figure 2.3.5: 2.3 Summary Statistics ~ Mean and Interquartile Range ~ (3)
```{r chunk_name26, echo=FALSE, warning=FALSE, fig.show='only'}
library(tidyverse)
PAFracking_upland <- PAFracking %>% filter(location == "Upland")

PAFracking_upland %>%   group_by(proximity) %>%
get_summary_stats(methane, type = c("mean_sd"))  %>%
  kbl() %>%
  kable_styling()
PAFracking_upland %>%  group_by(proximity) %>%
 get_summary_stats(methane, type = "median_iqr")  %>%
  kbl() %>%
  kable_styling()


```
###### Figure 2.3.6: 2.3 Summary Statistics ~ Mean Methane and Median Methane ~ (3)
```{r chunk_name27, echo=FALSE, warning=FALSE, fig.show='only', results='asis'}
PAFracking_upland <- PAFracking %>% filter(location == "Upland")

PAFracking_upland %>% 
  group_by(proximity) %>% 
  summarize(`Mean Methane` = round(mean(methane), 2), 
            `Median Methane` = round(median(methane), 2)) %>% 
  ungroup %>% 
rename("Proximity in the Upland" = proximity) %>%  # Rename the column
  kbl() %>% 
  kable_styling()



## PAFracking %>%: This takes the PAFracking dataset and pipes it (%>%) into the next operation
## filter(location == "Valley") %>%: This filters the dataset to include only rows where the value of the location variable is equal to "Valley".
## group_by(proximity) %>%: This groups the filtered dataset by the proximity variable, which indicates the proximity to fracking sites.
## summarize(Mean Methane= round(mean(methane), 2),Median Methane = round(median(methane), 2)) %>%: Within each group (determined by proximity to fracking 
## the round() function rounds the values to two decimal places  
## summarize(Mean Methane= round(mean(methane), 2),Median Methane = round(median(methane), 2)) %>%: Within each group (determined by proximity to fracking 
## the round() function rounds the values to two decimal places  
  ## "ungroup %>%:" This removes the grouping structure, ensuring that subsequent operations are applied to the dataset as a whole.
  ## ungroup %>%: This removes the grouping structure, ensuring that subsequent operations are applied to the dataset as a whole.
## 'kable_styling() function from the kableExtra package, making it visually more appealing.
 

```
###### Figure 2.3.7: 2.3 Parametric t-test (3)
```{r chunk_name28, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_upland <- PAFracking %>% filter(location == "Upland")


stat.test3 <- PAFracking_upland  %>% 
  t_test(methane ~ proximity, detailed = T) %>%
  add_significance() 
stat.test3

```
###### Figure 2.3.8: 2.3 Cohens D test (3)
```{r chunk_name29, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_upland <- PAFracking %>% filter(location == "Upland")

PAFracking_upland %>%  cohens_d(methane ~ proximity, var.equal = FALSE)  %>%
  kbl() %>%
  kable_styling()
```

###### Figure 2.3.9: 2.3 Report Results (3)
```{r chunk_name30, echo=FALSE, warning=FALSE, fig.show='only'}
library(ggplot2)
PAFracking_upland <- PAFracking %>% filter(location == "Upland")

stat.test3 <- stat.test3 %>% add_xy_position(x = "group")
bxp3 + 
  stat_pvalue_manual(stat.test3, tip.length = 0) +
  labs(subtitle = get_test_label(stat.test3, detailed = TRUE))

```

------

## 2.4.0

------


###### Figure 2.4.1: 2.4 Create a Box Plot (4)
```{r chunk_name31, echo=FALSE, warning=FALSE, fig.show='only'}

PAFracking_location <- PAFracking  %>% 
  

  group_by(location)


## creating a box plot

bxp4 <- ggboxplot(
  PAFracking_location, x = "location", y = "methane", add = "jitter", 
  ylab = "methane (g)", xlab = "location"
  )

bxp4

```

###### Figure 2.4.2: 2.4 Identify Outliers by Groups (4)
``` {r chunk_name32, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_location <- PAFracking  %>% 
  

  group_by(location) %>%
  identify_outliers(methane)  %>%
  kbl() %>%
  kable_styling()


PAFracking_location
```
###### Figure 2.4.3: 2.4 Check Normality by Groups (4) 
```{r chunk_name33, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_location <- PAFracking  %>% group_by(location)

set.seed(123)
PAFracking_location %>%
  group_by(location) %>%
  shapiro_test(methane)  %>%
  kbl() %>%
  kable_styling()


# Draw a qq plot by group
## this is showing that it is not normilly distributed
ggqqplot(PAFracking_location, x = "methane", facet.by = "location") 


```
###### Figure 2.4.4: 2.4 Summary Statistics ~ Mean and Interquartile Range ~ (4)
```{r chunk_name34, echo=FALSE, warning=FALSE, fig.show='only'}
library(tidyverse)

PAFracking_location <- PAFracking  %>% group_by(location)


PAFracking_location %>% get_summary_stats(methane, type = c("mean_sd"))  %>%
  kbl() %>%
  kable_styling()
PAFracking_location %>% get_summary_stats(methane, type = "median_iqr")  %>%
  kbl() %>%
  kable_styling()


```
###### Figure 2.4.5: 2.4 Summary Statistics ~ Mean Methane and Median Methane ~ (4)
```{r chunk_name35, echo=FALSE, warning=FALSE, fig.show='only'}

PAFracking_location <- PAFracking  %>% group_by(location)



PAFracking_location %>% 
  group_by(location) %>% 
  summarize(`Mean Methane` = round(mean(methane), 2), 
            `Median Methane` = round(median(methane), 2)) %>% 
  ungroup %>% 
rename("Location" = location) %>%  # Rename the column
  kbl() %>% 
  kable_styling()

```
###### Figure 2.4.6: 2.4 Levine test (4)
```{r chunk_name36, echo=FALSE, warning=FALSE, fig.show='only'}
library(rstatix)

PAFracking_location <- PAFracking  %>% group_by(location)



PAFracking_location %>% levene_test(methane ~ proximity)  %>%
  kbl() %>%
  kable_styling()

```
###### Figure 2.4.7: 2.4 Parametric t-test (4)
```{r chunk_name37, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_location <- PAFracking  %>% group_by(location)


stat.test4 <- PAFracking_location  %>% 
  t_test(methane ~ proximity, detailed = T) %>%
  add_significance()  

stat.test4

```
###### Figure 2.4.8: 2.4 Cohens D test (4)
```{r chunk_name38, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_location <- PAFracking  %>% group_by(location)


PAFracking_location %>%  cohens_d(methane ~ proximity, var.equal = FALSE)  %>%
  kbl() %>%
  kable_styling()
```
###### Figure 2.4.8: 2.4 Report Results (4)
```{r chunk_name, echo=FALSE, warning=FALSE, fig.show='only'}
library(ggplot2)
stat.test4 <- stat.test4 %>% add_xy_position(x = "group")
bxp4 + 
  stat_pvalue_manual(stat.test4, tip.length = 0) +
  labs(subtitle = get_test_label(stat.test4, detailed = TRUE)) 

```

-------
## 3.0.0: 3.0.0: Non-Parametric t-test and Preliminary test
------

###### Figure 3.1.1: 3.1 Compute the Wilcox test (1)
```{r chunk_name39, echo=FALSE, warning=FALSE, fig.show='only'}
library(rstatix)
stat.test <- PAFracking %>% 
  wilcox_test(methane ~ proximity) %>%
  add_significance()  %>%
  kbl() %>%
  kable_styling()
stat.test
```

###### Figure 3.1.2:  3.1 Calculate Effect Size (1) 
```{r chunk_name40, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking %>% wilcox_effsize(methane ~ proximity)  %>%
  kbl() %>%
  kable_styling()

```
###### Figure 3.2.1: 3.2 Compute the Wilcox test (2)
```{r chunk_name41, echo=FALSE, warning=FALSE, fig.show='only'}
library(rstatix)
stat.test <- PAFracking_valley %>% 
  wilcox_test(methane ~ proximity) %>%
  add_significance()  %>%
  kbl() %>%
  kable_styling()
stat.test
```
###### Figure 3.2.2: 3.2 Calculate Effect Size (2) 
```{r chunk_name42, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_valley %>% wilcox_effsize(methane ~ proximity)  %>%
  kbl() %>%
  kable_styling()

```
###### Figure 3.3.1: 3.3 Compute the Wilcox test (3)
```{r chunk_name43, echo=FALSE, warning=FALSE, fig.show='only'}
library(rstatix)
stat.test <- PAFracking_upland %>% 
  wilcox_test(methane ~ proximity) %>%
  add_significance()  %>%
  kbl() %>%
  kable_styling()
stat.test
```
###### Figure 3.3.2: 3.3 Calculate Effect Size (3) 
```{r chunk_name44, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_upland %>% wilcox_effsize(methane ~ proximity)  %>%
  kbl() %>%
  kable_styling()

```
###### Figure 3.4.1: 3.4 Compute the Wilcox test (4)
```{r chunk_name45, echo=FALSE, warning=FALSE, fig.show='only'}
library(rstatix)
stat.test <- PAFracking_location %>% 
  wilcox_test(methane ~ proximity) %>%
  add_significance()  %>%
  kbl() %>%
  kable_styling()
stat.test
```
### Figure 3.4.2:  3.4 Calculate Effect Size (4) 
```{r chunk_name46, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_location %>% wilcox_effsize(methane ~ proximity) %>%
  kbl() %>%
  kable_styling()

```


--------
## 4.0.0: Log Transformations and t-test
--------


###### Figure 4.1.1: 4.1 Log Transforming Data (1) 
```{r chunk_name47, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking$log.methane1<-log(PAFracking$methane)

```
###### Figure 4.1.2: 4.1 Histogram of Logged Data (1)
```{r chunk_name48, echo=FALSE, warning=FALSE, fig.show='only'}
library(ggplot2)

plot_1 <-ggplot(PAFracking, aes(x=log.methane1))+
geom_histogram(col="black") + facet_wrap(~proximity)+
scale_fill_manual(values=c("royalblue", "gray"))
plot_1


plot_1 + facet_grid(scales = "free") +
labs(x = "Proximity to Methane, log(ppm)", 
     title = "Ground Water Proximity to Methane")

```
###### Figure 4.1.3: 4.1 Levine test (1)
```{r chunk_name49, echo=FALSE, warning=FALSE, fig.show='only'}
library(rstatix)
library(kableExtra)

# Perform Levene's test and print the result using kableExtra
PAFracking %>% 
  levene_test(log.methane1 ~ proximity) %>%
  kbl() %>%
  kable_styling()


```
###### Figure 4.1.4: 4.1 Shapiro and Normality Test on Log Value (1)
```{r chunk_name50, echo=FALSE, warning=FALSE, fig.show='only'}
set.seed(123)
PAFracking %>%
  group_by(proximity) %>%
  shapiro_test(log.methane1)
```

###### Figure 4.2.1: 4.2 Log Transforming Data (2) 
```{r chunk_name51, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_valley$log.methane2<-log(PAFracking_valley$methane)

```
###### Figure 4.2.2: 4.2 Histogram of Logged Data (2)
```{r chunk_name52, echo=FALSE, warning=FALSE, fig.show='only'}

library(ggplot2)
PAFracking_valley$log.methane2<-log(PAFracking_valley$methane)


p<-ggplot(PAFracking_valley, aes(x=log.methane2))+
geom_histogram(col="black") + facet_wrap(~proximity)+
scale_fill_manual(values=c("royalblue", "gray"))
p


p + facet_grid(scales = "free") +
labs(x = "Proximity to Methane, log(ppm)", 
     title = "Valley Ground Water Proximity to Methane")

```

###### Figure 4.2.3: 4.2 Levine test (2)
```{r chunk_name53, echo=FALSE, warning=FALSE, fig.show='only'}
library(rstatix)
PAFracking_valley$log.methane2<-log(PAFracking_valley$methane)


PAFracking_valley %>% levene_test(log.methane2 ~ proximity)

```  

###### Figure 4.2.4:  4.2 Shapiro and Normality Test on Log Value (2)
```{r chunk_name54, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_valley$log.methane2<-log(PAFracking_valley$methane)

set.seed(123)
PAFracking_valley %>%
  group_by(proximity) %>%
  shapiro_test(log.methane2) 
```
###### Figure 4.3.1:  4.3 log transforming data for Uplnd (3) 
```{r chunk_name55, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_upland$log.methane3<-log(PAFracking_upland$methane)  

```
######  Figure 4.3.2:  4.3 Histogram of logged data for Upland (3)
```{r chunk_name56, echo=FALSE, warning=FALSE, fig.show='only'}

library(ggplot2)
PAFracking_upland$log.methane3<-log(PAFracking_upland$methane)  

p<-ggplot(PAFracking_upland, aes(x=log.methane3))+
geom_histogram(col="black") + facet_wrap(~proximity)+
scale_fill_manual(values=c("royalblue", "gray"))
p


p + facet_grid(scales = "free") +
labs(x = "Proximity to Methane, log(ppm)", 
     title = "Valley Ground Water Proximity to Methane")

```
###### Figure 4.3.3:  4.3 Levine test (3)
```{r chunk_name57, echo=FALSE, warning=FALSE, fig.show='only'}
library(rstatix)
PAFracking_upland$log.methane3<-log(PAFracking_upland$methane)  

PAFracking_upland %>% levene_test(log.methane3 ~ proximity) 


```  
###### Figure 4.3.4: 4.2 Shapiro and Normality Test on Log Value (3)
```{r chunk_name58, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_upland$log.methane3<-log(PAFracking_upland$methane)  
set.seed(123)
PAFracking_upland %>%
  group_by(proximity) %>%
  shapiro_test(log.methane3)  
```
###### Figure 4.4.1:  4.4 log transforming data for Valley (4) 
```{r chunk_name59, echo=FALSE, warning=FALSE, fig.show='only'}
PAFracking_location$log.methane4<-log(PAFracking_location$methane) 


```
###### Figure 4.4.2: 4.4 Histogram of logged data for Valley (4)
```{r chunk_name60, echo=FALSE, warning=FALSE, fig.show='only'}

library(ggplot2)

plot4<-ggplot(PAFracking_location, aes(x=log.methane4))+
geom_histogram(col="black") + facet_wrap(~proximity)+
scale_fill_manual(values=c("royalblue", "gray"))
plot4


plot4 + facet_grid(scales = "free") +
labs(x = "Proximity to Methane, log(ppm)", 
     title = "Valley Ground Water Proximity to Methane")

```
###### Figure 4.4.3: 4.4 Levine test (4)
```{r chunk_name61, echo=FALSE, warning=FALSE, fig.show='only'}
library(rstatix)

PAFracking_location %>% levene_test(log.methane4 ~ proximity)  


```  
###### Figure 4.4.4: 4.4 Shapiro and Normality Test on Log Value (4)
```{r chunk_name62, echo=FALSE, warning=FALSE, fig.show='only'}
set.seed(123)
PAFracking_location %>%
  group_by(location) %>%
  shapiro_test(log.methane4) 
```
